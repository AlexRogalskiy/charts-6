{{- if .Values.falcoagent.enabled -}}
{{- $_ := set . "Label" "falco" }}
{{- $_ := set . "Config" .Values.falcoagent }}
apiVersion: apps/v1
{{- if .Values.falcoagent.statefulset }}
kind: StatefulSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  {{- include "metadata" . }}
spec:
  selector:
    matchLabels:
      app: falco-agent
{{- if .Values.falcoagent.statefulset }}
  serviceName: falco-agent
{{- end }}
{{- if .Values.falcoagent.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
        name: output-data
      {{- with .Values.falcoagent.persistence.annotations }}
        annotations:
        {{- range $key, $value := . }}
          {{ $key }}: {{ $value }}
        {{- end }}
      {{- end }}
    spec:
      accessModes:
      {{- range .Values.falcoagent.persistence.accessModes }}
        - {{ . | quote }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.falcoagent.persistence.size | quote }}
    {{- if .Values.falcoagent.persistence.storageClass }}
      storageClassName: {{ .Values.falcoagent.persistence.storageClass }}
    {{- end -}}
{{- end }}
  template:
    metadata:
      labels:
        app: falco-agent
    {{- if .Values.falcoagent.podAnnotations }}
      annotations:
        {{ toYaml .Values.falcoagent.podAnnotations | indent 8 }}
    {{- end }}
    spec:
      serviceAccountName: {{ include "insights-agent.fullname" . }}-{{ .Label }}
      {{- if .Values.falcoagent.securityContext.enabled }}
      securityContext:
        fsGroup: {{ .Values.falcoagent.securityContext.fsGroup }}
        runAsNonRoot: {{ .Values.falcoagent.securityContext.runAsNonRoot }}
        runAsUser: {{ .Values.falcoagent.securityContext.runAsUser }}
      {{- end }}
    {{- if .Values.falcoagent.priorityClassName }}
      priorityClassName: {{ .Values.falcoagent.priorityClassName }}
    {{- end }}
      containers:
      - name: falco-agent
        volumeMounts:
        - name: output-data
          mountPath: /output
      {{- if .Values.falcoagent.securityContext.enabled }}
        securityContext:
          allowPrivilegeEscalation: {{ .Values.falcoagent.securityContext.allowPrivilegeEscalation }}
          readOnlyRootFilesystem: {{ .Values.falcoagent.securityContext.readOnlyRootFilesystem }}
          runAsNonRoot: {{ .Values.falcoagent.securityContext.runAsNonRoot }}
          runAsUser: {{ .Values.falcoagent.securityContext.runAsUser }}
      {{- end }}
        imagePullPolicy: {{ .Values.falcoagent.image.pullPolicy }}
        image: "{{ .Values.falcoagent.image.repository }}:{{ .Values.falcoagent.image.tag }}"
        ports:
        - containerPort: {{ .Values.falcoagent.service.port | default 3031 }}
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.falcoagent.service.port | default 3031 }}
          initialDelaySeconds: 15
          periodSeconds: 14
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.falcoagent.service.port | default 3031 }}
          initialDelaySeconds: 15
          periodSeconds: 15
        resources:
        {{- toYaml .Values.falcoagent.resources | nindent 10 }}
    {{- if .Values.falcoagent.affinity }}
      affinity:
        {{ toYaml .Values.falcoagent.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.falcoagent.nodeSelector }}
      nodeSelector:
        {{ toYaml .Values.falcoagent.nodeSelector | indent 8 }}
    {{- end }}
    {{- if .Values.falcoagent.tolerations }}
      tolerations:
        {{ toYaml .Values.falcoagent.tolerations | indent 8 }}
    {{- end }}
    {{- if not .Values.falcoagent.persistence.enabled }}
      volumes:
        - name: output-data
          emptyDir: {}
    {{- end }}
{{- end -}}